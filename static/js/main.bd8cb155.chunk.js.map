{"version":3,"sources":["components/GoodsItem/GoodsItem.jsx","components/GoodsList/GoodsList.jsx","App.jsx","index.jsx"],"names":["GoodItem","_ref","good","_jsx","children","GoodList","goods","map","goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","buttonClass","type","sortField","sortBy","concat","App","_useState","useState","_useState2","_slicedToArray","setSortField","_useState3","_useState4","isReverse","setReverse","forVisibleReset","length","visibleGoods","reverse","preperedGoods","_toConsumableArray","sort","good1","good2","localeCompare","preparedGoodsFromServer","_jsxs","className","onClick","ReactDOM","render","document","getElementById"],"mappings":"iOAAaA,EAAW,SAAHC,GAAA,IAAMC,EAAID,EAAJC,KAAI,OAC7BC,cAAA,MAAI,UAAQ,OAAMC,SAAEF,KCCTG,EAAW,SAAHJ,GAAA,IAAMK,EAAKL,EAALK,MAAK,OAC9BH,cAAA,MAAAC,SACGE,EAAMC,KAAI,SAAAL,GAAI,OACbC,cAACH,EAAQ,CAACE,KAAMA,GAAWA,SCApBM,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,aACtBC,EAAoB,WAyB1B,IAAMC,EAAc,SAACC,EAAMC,EAAWC,GAAM,gBAAAC,OAChCH,EAAI,KAAAG,OAAIF,IAAcC,EAAS,WAAa,KAG3CE,EAAM,WACjB,IAAAC,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCJ,EAASM,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAAgCJ,oBAAS,GAAMK,EAAAH,YAAAE,EAAA,GAAxCE,EAASD,EAAA,GAAEE,EAAUF,EAAA,GAEtBG,EAAkBb,EAAUc,OAAS,IAAmB,IAAdH,EAE1CI,EAjCR,SAAiCtB,EAAOO,EAAWgB,GACjD,IAAMC,EAAaC,YAAOzB,GAmB1B,OAjBIO,GACFiB,EAAcE,MAAK,SAACC,EAAOC,GACzB,OAAQrB,GACN,KAAKJ,EACH,OAAOwB,EAAME,cAAcD,GAC7B,KAAKxB,EACH,OAAOuB,EAAMN,OAASO,EAAMP,OAC9B,QACE,OAAO,MAKXE,GACFC,EAAcD,UAGTC,EAacM,CACnB5B,EACAK,EACAW,GAGF,OACEa,eAAA,OAAKC,UAAU,kBAAiBlC,SAAA,CAC9BiC,eAAA,OAAKC,UAAU,UAASlC,SAAA,CACtBD,cAAA,UACES,KAAK,SACL0B,UAAW3B,EAAY,UAAWE,EAAWJ,GAC7C8B,QAAS,kBAAMlB,EAAaZ,IAAqBL,SAClD,wBAIDD,cAAA,UACES,KAAK,SACL0B,UAAW3B,EAAY,aAAcE,EAAWH,GAChD6B,QAAS,kBAAMlB,EAAaX,IAAmBN,SAChD,mBAIDD,cAAA,UACES,KAAK,SACL0B,UAAW3B,EAAY,aAAca,GAAW,GAChDe,QAAS,kBAAMd,GAAYD,IAAWpB,SACvC,YAIAsB,GACCvB,cAAA,UACES,KAAK,SACL0B,UAAU,4BACVC,QAAS,WACPlB,EAAa,IACbI,GAAW,IACXrB,SACH,aAMLD,cAACE,EAAQ,CAACC,MAAOsB,QClGvBY,IAASC,OACPtC,cAACa,EAAG,IACJ0B,SAASC,eAAe,W","file":"static/js/main.bd8cb155.chunk.js","sourcesContent":["export const GoodItem = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n","import { GoodItem } from '../GoodsItem/GoodsItem';\n\nexport const GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <GoodItem good={good} key={good} />\n    ))}\n  </ul>\n);\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport { GoodList } from './components/GoodsList/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'byAlphabet';\nconst SORT_FIELD_LENGTH = 'byLength';\n\nfunction preparedGoodsFromServer(goods, sortField, reverse) {\n  const preperedGoods = [...goods];\n\n  if (sortField) {\n    preperedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preperedGoods.reverse();\n  }\n\n  return preperedGoods;\n}\n\nconst buttonClass = (type, sortField, sortBy) => (\n  `button ${type} ${sortField !== sortBy ? 'is-light' : ''}`\n);\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReverse, setReverse] = useState(false);\n\n  const forVisibleReset = sortField.length > 0 || isReverse === true;\n\n  const visibleGoods = preparedGoodsFromServer(\n    goodsFromServer,\n    sortField,\n    isReverse,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={buttonClass('is-info', sortField, SORT_FIELD_ALPHABET)}\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={buttonClass('is-success', sortField, SORT_FIELD_LENGTH)}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={buttonClass('is-warning', isReverse, true)}\n          onClick={() => setReverse(!isReverse)}\n        >\n          Reverse\n        </button>\n\n        {forVisibleReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}